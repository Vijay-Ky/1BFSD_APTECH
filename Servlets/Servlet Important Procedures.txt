http://tomcat.apache.org/
http://localhost:9090


D:\Developmentsoftwares\Tomcat9\webapps 
in the above folder only we have to develop
we have to develop all web applications
1st - create app1 folder (also called project folder)

- we can develop html,css,javascript files in app1 folder
- even jsp file also in the same location

- develop test1.html in the app1
- http://localhost:9090/app1/test1.html

-how to develop servlet
we require additional directory structure.
- inside app1 create onother folder called WEB-INF every character in the upper case
- in the WEB-INF folder create a classes folder this should be same name and create
src folder this can be with any name its for java files.
-create deployment descriptor its XML file in the WEB-INF level

- write java program
D:\Developmentsoftwares\Tomcat9\webapps\app1\WEB-INF\src>javac -d ../classes com/aptech/*.java
-we need describe in the deployment descriptor

-after web.xml develoment restart the server

http://localhost:9090/app1/hello

- to identify the mistake in web.xml just press cntr + b it will show full structure if it is proper


http://localhost:9090/app1/s2
http://localhost:9090/app1/Servlet2
http://localhost:9090/app1/xyz
http://localhost:9090/app1/abc

-supplying values through query string.
-after ? any no. of input parameters.
- '&' is the seperator between the inputs
http://localhost:9090/app1/abc?param1="Hello"&firstName="vijay"

- we can make a call to the servlet from html also

- we dont need to restart the server if we just develop and call servlet from html.

http://localhost:9090/app1/test2.html

- all html files should be in the project folder.


http://localhost:9090/app1/test3.html


- use PrintWriter to write back anything to the browser through SOP we cant

- to find out where this messages are printing come to 
 tomcat9->logs-> 
                 we can see the stdouts day wise it is creating

- tomcat is a server that only requires class files not the java files.


-------------------------------------------

http://localhost:9090/app2/test1.html


-without developing servlet, in the html if you give and submit you get 404 error 

-after html,css,javascript client side dev is done


---------------------WAR Dev-------------------------------------
1. JAR is nothing but zipped format of java.
2. In java to develop a kind of zip, we can use a JAR.
3. Java archieve is nothing but zipped format in java.
4. For core java appliations we will be using jar
   once the core java appliation got over, then we take that core java
   application content and making a jar file, and that jar file is sending
   to the customer, customer will make use of the jar file, we can run jar
   file using java command.
5. in case of web application, in place of jar we will be using
   WAR(WebArchive).
   That WAR file we can run in any J2EE complient server.
   it can be tomcat, jboss, web logic, web spear etc.
6. WAR is also called as portable format of the web application.
7. jar cf app5.war *
   i,e create file name, complete content of the current directory,
   includin the sub directories, extension .war can be aslo .jar
8. deploy that in webapps folder.
9. then restart the tom cat server, it will be creating one folder
    you get complete content of war file.
10. myapp>jar cf D:\Developmentsoftwares\Tomcat9\webapps\app6.war *
   this also possible, absolute path

------------------development with eclipse---------------
1.we need javaee eclipse for this
2. we need j2ee edition
3. we can develop dynamic web application 
4. before creating dynamic web app check if tom cat running outside or not
5. create a new dynamic web project
- eclipse doesnt have any target runtime environments- no tomcat,jre, database
- chosse run time envronemnt- tomcat 9
- if you dont get those lists then its not jee eclipse.
-choose the folder name of tomcat installation
-select dynamic web module version to 2.5
- till now we have developed module version of 2.5
-eclipse is using different directory structure for dynamic web application
its eclipse specific,
- every java program(any java pgm, servlet also)
  you should develop inside the java resources->src folder 
-under web content only we should develop, html, css, js, image, jsp files
-inside webcontent->web-inf->lib we need to place all third party
 jar files, we dont update build-path.
- inside eclipse build path is only for core java projects
- for all web apps we need to copy explicitely jar files into the lib
  folder.
-in the web-inf we have web.xml by default design view click source
-diplay-name tag is providing a name to display
-welcome-file-list - we are getting a readymade web.xml file.
-this directory structure is specific to eclipse not universal.
- previous development without eclipse, that is universal directory 
  structure for web app development.
-every j2ee complient servers expecting the directory structure like 
 this not eclipse structure.
-develop html file in web-content folder
- just run with some content of html directly, no need of 
configuring tomcat once again.
-html, js, css, image, and jsp should be inside the web-content folder.
-now develop simple servlet inside servlet
Servlet1 with package com.aptech
- click next it shows url mapping as /Servlet1
-eclipse chooses class name itself as URL pattern
-then uncheck dopost and doget. check service
- in the web.xml you will get optional tags
<description></description>
    <display-name>Servlet1</display-name>
-just keep these two statements inside the service method
PrintWriter out = response.getWriter();
		out.println("Hello to all from Servlet1");
-just run. no need of restarting the server.
-we dont require to mention the port number to call servlet in browser.
just run
- develop Servlet2 and html file and call the servelet from html
just run the html file and click the link
- develop another html file with simple form copy the action value and
develop Servlet3
- not url-mapping should not be the default one select edit and 
paste that url-pattern 
-override(check) only service method and uncheck doget, dopost
-come to html and run the file, by restarting the tomcat
you get empty form with submit just click submit you get the servlet call o/p

-now we will develop the servlet which interacts with the db
-creating another project
-target runtime you dont have to configure once again
 - target runtime will be configured only once in the workspace
  - dynamic web module version keep 2.5 only



